{"ast":null,"code":"var _jsxFileName = \"/home/cesar/WingcopterProjects/IdeaProjects/swapi-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"./components/Pagination\";\n\n// Componente de Tarjeta para cada personaje\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterCard = ({\n  character\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ccc\",\n      padding: \"10px\",\n      margin: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: character.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Birth Year: \", character.birth_year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Gender: \", character.gender]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Height: \", character.height]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mass: \", character.mass]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = CharacterCard;\nconst PersonInfoComponent = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [personInfo, setPersonInfo] = useState(null);\n  const [characterList, setCharacterList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const charactersPerPage = 2;\n  const fetchPersonInfo = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8080/swapi-proxy/person-info?name=${name}`);\n      setPersonInfo(response.data);\n    } catch (error) {\n      console.error(\"Error fetching person information:\", error);\n      setPersonInfo(null);\n    }\n  };\n  const fetchCharacterList = async () => {\n    try {\n      const response = await axios.get(\"https://swapi.dev/api/people/\");\n      setCharacterList(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching character list:\", error);\n      setCharacterList([]);\n    }\n  };\n  useEffect(() => {\n    fetchCharacterList();\n  }, []); // Fetch character list when the component mounts\n\n  // Calcula los índices de inicio y fin para la paginación\n  const indexOfLastCharacter = currentPage * charactersPerPage;\n  const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\n  const currentCharacters = characterList.slice(indexOfFirstCharacter, indexOfLastCharacter);\n\n  // Cambia de página\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter person name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPersonInfo,\n        children: \"Fetch Person Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), personInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: personInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birth Year: \", personInfo.birthYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", personInfo.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Planet: \", personInfo.planetName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fastest Vehicle Driven: \", personInfo.fastestVehicleDriven]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height: \", personInfo.height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mass: \", personInfo.mass]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Films:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: personInfo.films.map((film, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \" \", film.name, \",\", \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Release Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), \" \", film.releaseDate]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Character List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), currentCharacters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        character: character\n      }, character.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        charactersPerPage: charactersPerPage,\n        totalCharacters: characterList.length,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PersonInfoComponent, \"4HOKikpbv8bgZtu7PhG0AKUEDxY=\");\n_c2 = PersonInfoComponent;\nexport default PersonInfoComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"CharacterCard\");\n$RefreshReg$(_c2, \"PersonInfoComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pagination","jsxDEV","_jsxDEV","CharacterCard","character","style","border","padding","margin","children","name","fileName","_jsxFileName","lineNumber","columnNumber","birth_year","gender","height","mass","_c","PersonInfoComponent","_s","setName","personInfo","setPersonInfo","characterList","setCharacterList","currentPage","setCurrentPage","charactersPerPage","fetchPersonInfo","response","get","data","error","console","fetchCharacterList","results","indexOfLastCharacter","indexOfFirstCharacter","currentCharacters","slice","paginate","pageNumber","type","value","onChange","e","target","onClick","birthYear","planetName","fastestVehicleDriven","films","map","film","index","releaseDate","totalCharacters","length","_c2","$RefreshReg$"],"sources":["/home/cesar/WingcopterProjects/IdeaProjects/swapi-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"./components/Pagination\";\n\n// Componente de Tarjeta para cada personaje\nconst CharacterCard = ({ character }) => {\n  return (\n    <div style={{ border: \"1px solid #ccc\", padding: \"10px\", margin: \"10px\" }}>\n      <h3>{character.name}</h3>\n      <p>Birth Year: {character.birth_year}</p>\n      <p>Gender: {character.gender}</p>\n      <p>Height: {character.height}</p>\n      <p>Mass: {character.mass}</p>\n      {/* Agrega más campos según sea necesario */}\n    </div>\n  );\n};\n\nconst PersonInfoComponent = () => {\n  const [name, setName] = useState(\"\");\n  const [personInfo, setPersonInfo] = useState(null);\n  const [characterList, setCharacterList] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const charactersPerPage = 2;\n\n  const fetchPersonInfo = async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8080/swapi-proxy/person-info?name=${name}`\n      );\n      setPersonInfo(response.data);\n    } catch (error) {\n      console.error(\"Error fetching person information:\", error);\n      setPersonInfo(null);\n    }\n  };\n\n  const fetchCharacterList = async () => {\n    try {\n      const response = await axios.get(\"https://swapi.dev/api/people/\");\n      setCharacterList(response.data.results);\n    } catch (error) {\n      console.error(\"Error fetching character list:\", error);\n      setCharacterList([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchCharacterList();\n  }, []); // Fetch character list when the component mounts\n\n  // Calcula los índices de inicio y fin para la paginación\n  const indexOfLastCharacter = currentPage * charactersPerPage;\n  const indexOfFirstCharacter = indexOfLastCharacter - charactersPerPage;\n  const currentCharacters = characterList.slice(\n    indexOfFirstCharacter,\n    indexOfLastCharacter\n  );\n\n  // Cambia de página\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <div>\n        <label>\n          Enter person name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </label>\n        <button onClick={fetchPersonInfo}>Fetch Person Info</button>\n      </div>\n\n      {personInfo && (\n        <div>\n          <h2>{personInfo.name}</h2>\n          <p>Birth Year: {personInfo.birthYear}</p>\n          <p>Gender: {personInfo.gender}</p>\n          <p>Planet: {personInfo.planetName}</p>\n          <p>Fastest Vehicle Driven: {personInfo.fastestVehicleDriven}</p>\n          <p>Height: {personInfo.height}</p>\n          <p>Mass: {personInfo.mass}</p>\n\n          <h3>Films:</h3>\n          <ul>\n            {personInfo.films.map((film, index) => (\n              <li key={index}>\n                <strong>Name:</strong> {film.name},{\" \"}\n                <strong>Release Date:</strong> {film.releaseDate}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n\n      <div>\n        <h2>Character List</h2>\n        {/* Utiliza el componente CharacterCard para cada personaje */}\n        {currentCharacters.map((character) => (\n          <CharacterCard key={character.name} character={character} />\n        ))}\n\n        {/* Paginación */}\n        <Pagination\n          charactersPerPage={charactersPerPage}\n          totalCharacters={characterList.length}\n          paginate={paginate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PersonInfoComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}